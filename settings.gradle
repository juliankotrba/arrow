/*
 * Copyright (C) 2017 The Arrow Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

rootProject.name = "arrow"

buildscript {
    gradle.ext.tutteli_plugins_version = '0.4.0'
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "ch.tutteli:tutteli-gradle-settings:$gradle.ext.tutteli_plugins_version"
    }
}

apply plugin: 'ch.tutteli.settings'


include(':arrow-meta-test-models')
project(':arrow-meta-test-models').projectDir = new File('modules/meta/arrow-meta/models')

//noinspection GroovyAssignabilityCheck
include {
    modules {

        meta {
            _ 'annotations'
            _ 'meta'
        }

        core {
            _ 'core-data'
            _ 'core-extensions'
            _ 'extras'
            _ 'extras-extensions'
            _ 'generic'
            _ 'kindedj'
            _ 'mtl'
            _ 'syntax'
            _ 'test'
            _ 'typeclasses'
        }

        free {
            _ 'free-data'
            _ 'free-extensions'
        }

        effects {
            _ 'effects-data'
            _ 'effects-extensions'
            _ 'effects-io-extensions'
            _ 'effects-rx2-data'
            _ 'effects-rx2-extensions'
            _ 'effects-reactor-data'
            _ 'effects-reactor-extensions'
        }

        integrations {
            _ 'integrations-retrofit-adapter'
        }

        recursion {
            _ 'recursion-data'
            _ 'recursion-extensions'
        }

        docs {
            _ 'docs'
            _ 'examples'
        }

        optics {
            _ 'optics'
        }

        dagger {
            _ 'dagger'
            _ 'dagger-effects'
            _ 'dagger-effects-rx2'
        }

        shadow {
            _ 'shadow'
        }

        streams {
            _ 'streams'
        }

        ank {
            _ 'ank'
            _ 'ank-gradle'
        }

        aql {
            _ 'query-language'
        }

        reflect {
            _ 'reflect'
        }

        validation {
            _ 'validation'
        }
    }
}